Project Overview:
The project involved creating a simple login authentication system using JavaScript, enabling user registration, secure login, and access to a protected page.

Features:
User Registration: New users can register with a unique username and password.
Password Hashing: Passwords are hashed before storage (using a mock hashing function for demonstration purposes).
User Login: Registered users can log in with their credentials.
Data Persistence: User data is stored and retrieved using localStorage, ensuring persistence across sessions.
Form Validation: Basic validation to check if a username already exists during registration.

Technologies Used:
HTML & CSS: For building and styling the user interface.
JavaScript: For handling user interactions, form submissions, and data storage.
LocalStorage: For persisting user data across page reloads.
Code Overview:
User Registration: The system captures the username and password, hashes the password, checks for existing usernames, and stores the new user data in localStorage.
User Login: The system verifies the username and password against stored user data and grants access upon successful authentication.

Requirements:
User registration feature for sign-up with username and password.
Secure storage of user information (hashed passwords).
Login feature for credential verification.
Secured page accessible only to logged-in users.

Implementation Steps:
1. User Registration:
Developed a function/module for user registration.
Prompted users to enter a username and password.
Stored user information securely in a data structure (e.g., dictionary, array).
2. Password Encryption:
Used cryptographic libraries (e.g., bcrypt, hashlib) to hash and salt passwords.
Avoided storing plain text passwords for enhanced security.
3. User Login:
Developed a function/module for user login.
Prompted users to enter their credentials.
Verified login by comparing entered passwords with stored hashed passwords.
4. Secured Page:
Implemented a basic secured page displaying content to authenticated users only.

Results & Learnings:
Successfully built a functional and secure login authentication system.
Gained deeper insights into user authentication and security practices.
Improved skills in backend development and database integration.

